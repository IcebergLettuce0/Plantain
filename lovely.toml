[manifest]
version = "1.0.0"
dump_lua = true
priority = 0


[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
match_indent = true
pattern = '''G.deck:shuffle('cashout'..G.GAME.round_resets.ante)'''
position = "after"
payload = '''
for i=1, #G.jokers.cards do
    eval_card(G.jokers.cards[i], {pl_cash_out = true})
end
'''

[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = '''if blind and blind.name and blind.name ~= '' then'''
position = "after"
payload = '''
for i=1, #G.jokers.cards do
    if G.jokers.cards[i].ability.name == 'j_Plantain_chaos' then
        if G.jokers.cards[i].ability.extra.mimic then
            G.jokers:remove_card(G.jokers.cards[i].ability.extra.mimic)
            G.jokers.cards[i].ability.extra.mimic:remove()
            G.jokers.cards[i].ability.extra.mimic = nil
        end
        local options = {}
        for k, v in pairs(G.P_CENTERS) do
            if v.unlocked and v.set == 'Joker' and v.blueprint_compat then
                table.insert(options, v)
            end
        end
        local chosen_key = pseudorandom_element(options, pseudoseed('chaos'..G.GAME.round_resets.ante))
        G.jokers.cards[i].ability.extra.mimic = SMODS.create_card({set = 'Joker', area = G.jokers, no_edition = true, key = chosen_key.key})
        G.jokers.cards[i].ability.extra.mimic.states.visible = nil
        G.jokers.cards[i].ability.extra.mimicname = localize{type = 'name_text', set = G.jokers.cards[i].ability.extra.mimic.config.center.set, key = G.jokers.cards[i].ability.extra.mimic.config.center.key}
    end
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''self.removed = true'''
position = "after"
payload = '''
if self.ability.name == 'j_Plantain_chaos' and self.ability.extra.mimic then
    G.jokers:remove_card(self.ability.extra.mimic)
    self.ability.extra.mimic:remove()
    self.ability.extra.mimic = nil
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''elseif self.ability.name == 'Perkeo' then loc_vars = {self.ability.extra}
        end'''
position = "after"
payload = '''
if G.jokers and G.jokers.cards then
    for i=1, #G.jokers.cards do
        if G.jokers.cards[i].ability.name == 'j_Plantain_chaos' and G.jokers.cards[i].ability.extra.mimic and self.ability.name == G.jokers.cards[i].ability.extra.mimic.ability.name and G.jokers.cards[i].ability.extra.mimic.config.center.mod == nil then
            G.jokers.cards[i].ability.extra.info = loc_vars
        end
    end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if G.jokers.cards[i] == self then other_joker = G.jokers.cards[i+1] end
            end'''
position = "after"
payload = '''
if other_joker == nil then
    for i = 1, #G.jokers.cards do
        if G.jokers.cards[i].ability.name == 'j_Plantain_chaos' and G.jokers.cards[i].ability.extra.mimic and G.jokers.cards[i].ability.extra.mimic == self then 
            other_joker = G.jokers.cards[i+1]
        end
    end
end
'''
match_indent = true