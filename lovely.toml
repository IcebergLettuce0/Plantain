[manifest]
version = "1.0.0"
dump_lua = true
priority = 0


[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
match_indent = true
pattern = '''G.deck:shuffle('cashout'..G.GAME.round_resets.ante)'''
position = "after"
payload = '''
for i=1, #G.jokers.cards do
    eval_card(G.jokers.cards[i], {pl_cash_out = true})
end
'''

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.set == "Joker" and not self.debuff then'''
position = "after"
payload = '''
if context.setting_blind and not self.getting_sliced and context.blind == G.GAME.round_resets.blind and self.config.center.key == 'j_Plantain_inkblot_joker' then
    if G.jokers then
        local options = {}
        for k, v in pairs(G.P_CENTERS) do
          if v.unlocked and v.set == 'Joker' and v.name ~= 'j_Plantain_inkblot_joker' and v.name ~= 'Shortcut' then
            if not v.mod then
                table.insert(options, v)
            end
          end
        end
        local chosen_key = pseudorandom_element(options, pseudoseed('inkblot_joker'..G.GAME.round_resets.ante))
        self:set_ability(chosen_key)
        self.config.center = {}
        self.mimic = chosen_key
        self:set_sprites(G.P_CENTERS['j_Plantain_inkblot_joker'])
        local table = G.P_CENTERS['j_Plantain_inkblot_joker']
        for k, j in pairs(chosen_key) do
          if k ~= 'loc_vars' and k ~= 'loc_txt' and k ~= 'key' and k ~= 'atlas' and k ~= 'pos' and k ~= 'cost' and k ~= 'rarity' then
            table[k] = j
          end
        end
        self.config.center = table
    end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if not card then
            local ability = copy_table(cfg)
            ability.set = 'Joker'
            ability.name = _c.name
            local ret = {Card.generate_UIBox_ability_table({ ability = ability, config = { center = _c }, bypass_lock = true}, true)}
            specific_vars = ret[1]
            if ret[2] then desc_nodes[#desc_nodes+1] = ret[2] end
            main_end = ret[3]
        end'''
position = "at"
payload = '''
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''elseif self.ability.name == 'Perkeo' then loc_vars = {self.ability.extra}
        end'''
position = "after"
payload = '''
if G.jokers and G.jokers.cards then
    for i=1, #G.jokers.cards do
        if G.jokers.cards[i].config.center.key == 'j_Plantain_inkblot_joker' and self.ability.name == G.jokers.cards[i].ability.name then
            G.jokers.cards[i].plantain_info = loc_vars
        end
    end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.config.center.soul_pos and (self.config.center.discovered or self.bypass_discovery_center) then'''
position = "at"
payload = '''if self.config.center.soul_pos and (self.config.center.discovered or self.bypass_discovery_center) and not self.mimic then'''
match_indent = true